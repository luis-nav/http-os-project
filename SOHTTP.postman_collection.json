{
	"info": {
		"_postman_id": "58c598f4-d9a1-4fe3-a0f3-06e53488dc4d",
		"name": "SOHTTP",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "32164699"
	},
	"item": [
		{
			"name": "Autopost",
			"item": [
				{
					"name": "POST_TEXT",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is within an acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "Hola",
							"options": {
								"raw": {
									"language": "text"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/msg",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"msg"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST_JSON",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Response status code is 201\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(201);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response time is within an acceptable range\", function () {\r",
									"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"message\": \"Hola desde json\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "localhost:8080/msg",
							"host": [
								"localhost"
							],
							"port": "8080",
							"path": [
								"msg"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Server welcomes user\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Todd\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "Todd",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/login",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_ALL",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"     pm.expect(pm.response.code).to.equal(200);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/msg",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_ONE",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"     pm.expect(pm.response.code).to.equal(200);\r",
							"});\r",
							"\r",
							"pm.test(\"Body includes id\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/msg?id=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_NONE_EXISTENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"     pm.expect(pm.response.code).to.equal(404);\r",
							"});\r",
							"\r",
							"pm.test(\"Response contains message not found\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"Message not found\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/msg?id=-10",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					],
					"query": [
						{
							"key": "id",
							"value": "-10"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET_ONE_WITH_NO_PARAMS",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {\r",
							"     pm.expect(pm.response.code).to.equal(404);\r",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/msg?",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					],
					"query": [
						{
							"key": "",
							"value": null
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "BAD_REQUEST",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response should have status code 404\", function() {\r",
							"    pm.expect(pm.response.code).to.eq(404);\r",
							"})\r",
							"\r",
							"pm.test(\"Response should have error message\", function() {\r",
							"    pm.expect(pm.response.text()).to.include(\"[Error]\");\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "localhost:8080/non_existent_route",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"non_existent_route"
					]
				}
			},
			"response": []
		},
		{
			"name": "BAD_POST_JSON",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status code is 201\", function () {\r",
							"    pm.expect(pm.response.code).to.equal(400);\r",
							"});\r",
							"\r",
							"\r",
							"pm.test(\"Response time is within an acceptable range\", function () {\r",
							"  pm.expect(pm.response.responseTime).to.be.below(300);\r",
							"});\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message:\": \"Hola desde json\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/msg",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					]
				}
			},
			"response": []
		},
		{
			"name": "PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.eq(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Contains id\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "Este es el nuevo mensaje",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/msg?id=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "BAD_PATCH",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.eq(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Contains id\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"1\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "Este es el nuevo mensaje",
					"options": {
						"raw": {
							"language": "text"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/msg?id=1",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					],
					"query": [
						{
							"key": "id",
							"value": "1"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT_NON_EXISTENT",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.expect(pm.response.code).to.eq(200)\r",
							"})\r",
							"\r",
							"pm.test(\"Contains id\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"5\")\r",
							"})"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"message\": \"Este mensaje no existía\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "localhost:8080/msg?id=6",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"msg"
					],
					"query": [
						{
							"key": "id",
							"value": "6"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE",
			"request": {
				"method": "GET",
				"header": []
			},
			"response": []
		}
	]
}